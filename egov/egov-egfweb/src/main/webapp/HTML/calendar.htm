<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency, transparency,
  ~    accountability and the service delivery of the government organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->

<HTML>
   <HEAD>

      <TITLE>Calendar</TITLE>
      <STYLE TYPE="text/css">
         .today {color:navy; font-weight:bold}
         .days {font-weight:bold}
      </STYLE>
	  <link rel=stylesheet href="../stylesheet/global.css" type="text/css">
      <SCRIPT LANGUAGE="JavaScript">
         // Initialize arrays.
         var months = new Array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
        var months1 = new Array("01", "02", "03", "04", "05", "06", "07","08", "09", "10", "11", "12");
         var daysInMonth = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
         var days = new Array("Sun", "Mon", "Tue","Wed", "Thu", "Fri", "Sat");

         function getDays(month, year) {
		 																		//alert('Check Leaf');
            // Test for leap year when February is selected.
            if (1 == month)
               return ((0 == year % 4) && (0 != (year % 100))) ||
                  (0 == year % 400) ? 29 : 28;
            else
               return daysInMonth[month];
         }

         function getToday() {
		 																		//alert('getToday');
            // Generate today's date.
            this.now = new Date();
            this.year = this.now.getFullYear();
            this.month = this.now.getMonth();
            this.day = this.now.getDate();
         }

         // Start with a calendar for today.
         today = new getToday();

         function newCalendar() {
		 																		//alert('new Calendar');
            today = new getToday();
			var parseYear = parseInt(document.getElementById('divYear').innerHTML);

			var newCal = new Date(parseYear, document.all.month.selectedIndex, 1);
            var day = -1;
            var startDay = newCal.getDay();
            var daily = 0;
            if ((today.year == newCal.getFullYear()) &&
                  (today.month == newCal.getMonth()))
               day = today.day;
            // Cache the calendar table's tBody section, dayList.



            var tableCal = document.all.calendar.tBodies.dayList;
            var intDaysInMonth = getDays(newCal.getMonth(), newCal.getFullYear());
            for (var intWeek = 0; intWeek < tableCal.rows.length; intWeek++)
               for (var intDay = 0; intDay < tableCal.rows[intWeek].cells.length; intDay++)
			    {
                  var cell = tableCal.rows[intWeek].cells[intDay];
                  // Start counting days.
                  if ((intDay == startDay) && (0 == daily))
                     daily = 1;
                  // Highlight the current day.
                  cell.className = (day == daily) ? "today" : "";
                  // Output the day number into the cell.
                  if ((daily > 0) && (daily <= intDaysInMonth))
                     cell.innerText = daily++;
                  else
                     cell.innerText = "";
               }
         }

         function getDate() {
		 																		//alert('getDate');
		 	var sDate;
            // This code executes when the user clicks on a day in the calendar. names[month].substring(0,3)
            if ("TD" == event.srcElement.tagName)
               // Test whether day is valid.
               if ("" != event.srcElement.innerText)
                  //alert(event.srcElement.innerText);

				  //sDate = event.srcElement.innerText + "-" + months[document.all.month.value - 1].substring(0,3) + "-" + document.all.year.value;

				 // months[document.all.month.value - 1]);
//				  sDate = event.srcElement.innerText + "-" + months[document.all.month.value - 1].substring(0,3) + "-" + parseInt(document.getElementById('divYear').innerHTML);
sDate = event.srcElement.innerText + "/" + months1[document.all.month.value - 1].substring(0,2) + "/" + parseInt(document.getElementById('divYear').innerHTML);
				  if (event.srcElement.innerText != '')
				  document.all.ret.value = sDate;
 		  		  window.close();
         }


		 function changeYear1()
		 {
		 	//alert('changeYear1');
			document.getElementById('divYear').innerHTML = parseInt(document.getElementById('divYear').innerHTML) - 1;
		 }

		 function changeYear()
		 {
		 	//alert('changeYear');
			document.getElementById('divYear').innerHTML = parseInt(document.getElementById('divYear').innerHTML) + 1;
		 }

		 function getYear()
		 {
            var dt = new Date();
			document.getElementById('divYear').innerHTML = dt.getFullYear();
		}
      </SCRIPT>

   </HEAD>
   <!-- <BODY ONLOAD="newCalendar()" OnUnload="window.returnValue = document.all.ret.value;" BGCOLOR="#ECE9D8" TOPMARGIN=2 LEFTMARGIN=5> -->
   <BODY ONLOAD="getYear();newCalendar();" OnUnload="window.returnValue = document.all.ret.value;" BGCOLOR="#ECE9D8" TOPMARGIN=2 LEFTMARGIN=5>
   <input type="hidden" name="ret">
      <TABLE ID="calendar" BGCOLOR="#ECE9D8" BORDER=0 WIDTH=100%>
         <THEAD>
            <TR>
              <TD COLSPAN=7 ALIGN=CENTER>
			  <!-- COLOR="#0000BB" size=2 -->
  			 <input name="imageField" onclick="changeYear1();newCalendar();" align="bottom" type="image" src="/egi/resources/erp2/images/arrowleft.gif" width="13" height="13" border="0">
			 <FONT color="#0000BB" size="2" id="divYear" style="font-weight:bold">Year</FONT>
    		 <input name="imageField2" onclick="changeYear();newCalendar();" type="image" src="/egi/resources/erp2/images/arrowright.gif" width="13" height="13" border="0">

                  <!-- Month combo box -->
                  <SELECT ID="month" ONCHANGE="newCalendar()">
                     <SCRIPT LANGUAGE="JavaScript">
                        for (var intLoop = 0; intLoop < months.length;
                              intLoop++)
                           document.write("<OPTION VALUE= " + (intLoop + 1) + " " +
                              (today.month == intLoop ?
                                 "Selected" : "") + ">" +
                              months[intLoop]);
                     </SCRIPT>
                  </SELECT>


               </TD>
            </TR>
            <TR CLASS="days" >
               <SCRIPT LANGUAGE="JavaScript">
                  // Output days.
                  for (var intLoop = 0; intLoop < days.length;
                        intLoop++)
                     document.write("<TD>" + days[intLoop] + "</TD>");
               </SCRIPT>
            </TR>
         </THEAD>

         <TBODY ID="dayList" ALIGN=CENTER onMouseOver="this.style.cursor='hand'" ONCLICK="getDate()">
            <!-- Generate grid for individual days. -->
            <SCRIPT LANGUAGE="JavaScript">
               for (var intWeeks = 0; intWeeks < 6; intWeeks++) {
                  document.write("<TR>");
                  for (var intDays = 0; intDays < days.length;
                        intDays++)
                     document.write("<TD align=center></TD>");
                  document.write("</TR>");
               }
            </SCRIPT>
         </TBODY>

      </TABLE>
	  <!-- <center><Input Style="width:50pt" type=button value="Cancel" OnClick="Cancel();"></center> -->
   </BODY>
</HTML>
