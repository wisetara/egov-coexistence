<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency, transparency,
  ~    accountability and the service delivery of the government organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="org.egov.infstr.models.ServiceDetails" table="egcl_servicedetails" >
		<id name="id" column="ID" type="long" unsaved-value="null">
			<generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
				<param name="sequence_name">seq_egcl_servicedetails</param>
			</generator>
		</id>
		<property name="createdBy" type="long"
			>
			<column name="CREATED_BY" precision="22" scale="0" />
		</property>
		<property name="createdDate" column="CREATED_DATE" type="timestamp" />
		<property name="modifiedDate" column="MODIFIED_DATE" type="timestamp" />
		<property name="modifiedBy" type="long"
			>
			<column name="MODIFIED_BY" precision="22" scale="0" />
		</property>
		<property name="name" column="name" type="string" />
		<property name="serviceUrl" column="SERVICEURL" type="string" />
		<property name="isEnabled" column="ISENABLED" type="java.lang.Boolean" />
		<property name="callBackurl" column="CALLBACKURL" type="string" />
		<property name="serviceType" column="SERVICETYPE" type="string" />
		<property name="code" column="CODE" type="string" />
		<property name="voucherCreation" column="VOUCHERCREATION" type="java.lang.Boolean" />
		<property name="isVoucherApproved" column="ISVOUCHERAPPROVED" type="java.lang.Boolean" />
		<property name="orderNumber" column="ORDERNUMBER" type="java.lang.Integer" />
		<property name="voucherCutOffDate" type="date">
			<column name="VOUCHERCUTOFFDATE" length="7" />
		</property>

		<set name="bankAccountServiceMap" inverse="true" cascade="all,delete-orphan" >
			<key>
				<column name="SERVICEDETAILS" precision="22" scale="0" />
			</key>
			<one-to-many class="org.egov.commons.entity.BankAccountServiceMap" />
		</set>

		<many-to-one name="fund" class="org.egov.commons.Fund"
			column="fund" fetch="select" />
		<many-to-one name="fundSource" class="org.egov.commons.Fundsource"
			column="fundsource" fetch="select" />

		<many-to-one name="functionary" class="org.egov.commons.Functionary"
			column="functionary" fetch="select" />
		<many-to-one name="scheme" class="org.egov.commons.Scheme"
			column="scheme" fetch="select" />
		<many-to-one name="subscheme" class="org.egov.commons.SubScheme"
			column="subscheme" fetch="select" />
		<many-to-one name="function" class="org.egov.commons.CFunction"
			column="function" fetch="select" />

		<many-to-one name="serviceCategory" class="org.egov.infstr.models.ServiceCategory"
			column="servicecategory" fetch="select" />

		<set name="serviceDept" table="egcl_service_dept_mapping" >
			<key>
				<column name="servicedetails" precision="22" scale="0" />
			</key>
			<many-to-many class="org.egov.infra.admin.master.entity.Department"
				column="department" />
		</set>

		<set name="serviceAccountDtls" inverse="true" cascade="all,delete-orphan">
			<key>
				<column name="servicedetails" precision="22" scale="0" />
			</key>
			<one-to-many class="org.egov.infstr.models.ServiceAccountDetails" />
		</set>
	</class>

	<query name="SERVICE_BY_CATEGORY_FOR_TYPE">
		<![CDATA[select sd from org.egov.infstr.models.ServiceDetails sd where sd.serviceCategory.id=? and sd.serviceType=? and sd.isEnabled=?]]>
	</query>

	<query name="getServicesByType">
    <![CDATA[select s from ServiceDetails s where s.serviceType = ?]]></query>

	<query name="getCollectionServices">
    <![CDATA[select s from ServiceDetails s where s.serviceType in ('B', 'C')]]></query>

	<query name="getServiceByCode">
    <![CDATA[select s from ServiceDetails s where s.code=?]]></query>

    <query name="getServicesByName">
    <![CDATA[select s from ServiceDetails s where s.name = ?]]></query>


</hibernate-mapping>
