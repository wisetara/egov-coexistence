<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency, transparency,
  ~    accountability and the service delivery of the government organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->
<beans xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/security
	   http://www.springframework.org/schema/security/spring-security.xsd" default-lazy-init="true">

    <security:global-method-security secured-annotations="enabled"
                                     access-decision-manager-ref="accessDecisionManager"/>
   <!--  <security:http auto-config="false"
    	security-context-repository-ref="applicationSecurityContextRepository"
    	entry-point-ref="authenticationEntryPoint"
    	authentication-manager-ref="authenticationManager" >
    	<security:custom-filter ref="authenticationProcessingFilter" after="FIRST"/>
    	<security:access-denied-handler  error-page="/error/403"/>

    </security:http>         -->

    <bean id="concurrentSessionFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg name="sessionRegistry" ref="springSessionBackedSessionRegistry"/>
    </bean>
	<bean id ="applicationSecurityContextRepository" class="org.egov.infra.config.security.repository.ApplicationSecurityRepository">
	</bean>
    <bean id="concurrentSessionControlStrategy"
          class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
        <constructor-arg index="0" ref="springSessionBackedSessionRegistry"/>
        <property name="exceptionIfMaximumExceeded" value="true"/>
        <property name="maximumSessions" value="${max.user.session}"/>
    </bean>

    <bean id="registerSessionAuthenticationStrategy"
          class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
        <constructor-arg ref="springSessionBackedSessionRegistry"/>
    </bean>

    <bean id="securityContextPersistenceFilter"
          class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
          	<constructor-arg ref="applicationSecurityContextRepository"/>
          </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="/index.jsp"/>
        <constructor-arg>
            <list>
                <ref bean="applicationLogoutHandler"/>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout"/>
    </bean>

    <bean id="authenticationProcessingFilter"
          class="org.egov.infra.config.security.authentication.filter.ApplicationAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/j_security_check"/>
        <property name="rememberMeServices" ref="rememberMeServices"/>
        <property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy"/>
        <property name="credentialFields">
            <list>
                <value>j_password</value>
                <value>locationId</value>
            </list>
        </property>
        <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
        <property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
    </bean>

    <bean id="authenticationFailureHandler"
          class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/login/secure?error=true"/>
        <property name="useForward" value="false"/>
    </bean>

    <bean id="authenticationSuccessHandler"
          class="org.egov.infra.config.security.authentication.handler.ApplicationAuthenticationSuccessHandler">
        <property name="alwaysUseDefaultTargetUrl" value="false"/>
        <property name="defaultTargetUrl" value="/home"/>
        <property name="excludedUrlRegex">
            <value>^https?://[^/]+/egi/(home/(.*)|inbox($|/.*))</value>
        </property>
    </bean>

    <bean id="securityContextHolderAwareRequestFilter"
          class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>

    <bean id="sessionFixationProtectionStrategy"
          class="org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy"/>

    <bean id="sessionAuthenticationStrategy"
          class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg name="delegateStrategies">
            <list>
                <ref bean="concurrentSessionControlStrategy"/>
                <ref bean="sessionFixationProtectionStrategy"/>
                <ref bean="registerSessionAuthenticationStrategy"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="rememberMeAuthenticationFilter"
          class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
        <constructor-arg name="rememberMeServices" ref="rememberMeServices"/>
    </bean>

    <bean id="anonymousAuthenticationFilter"
          class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <constructor-arg name="key" value="anonymous"/>
        <constructor-arg name="principal" value="anonymous"/>
        <constructor-arg name="authorities">
            <list value-type="org.springframework.security.core.GrantedAuthority">
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg name="role" value="SYSTEM"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg index="0" ref="authenticationEntryPoint"/>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/error/403"/>
            </bean>
        </property>
    </bean>

    <bean id="authenticationEntryPoint"
          class="org.egov.infra.web.filter.ApplicationAuthenticationEntryPoint">
       <!--  <constructor-arg index="0" value="/index.jsp"/>
        <property name="forceHttps" value="false"/> -->
    </bean>

    <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="securityMetadataSource" ref="applicationAuthorizationMetadataSource"/>
        <property name="rejectPublicInvocations" value="true"/>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg index="0">
            <list>
                <!-- <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value=""/>
                </bean> -->
                <bean class="org.egov.infra.config.security.voter.ApplicationDecisionVoter"></bean>
            </list>
        </constructor-arg>
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>

    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
        <constructor-arg index="0" value="23_*!cdU='612./e;NrI"/>
        <constructor-arg index="1" ref="userDetailsService"/>
        <property name="parameter" value="rememberMe"/>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg>
            <list>
                <ref bean="applicationAuthenticationProvider"/>
                <ref bean="anonymousAuthenticationProvider"/>
                <ref bean="rememberMeAuthenticationProvider"/>
            </list>
        </constructor-arg>
        <property name="eraseCredentialsAfterAuthentication" value="false"/>
    </bean>

    <bean id="applicationAuthenticationProvider"
          class="org.egov.infra.config.security.authentication.provider.ApplicationAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="preAuthenticationChecks" ref="userActivationChecker"></property>
    </bean>

    <bean id="anonymousAuthenticationProvider"
          class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <constructor-arg index="0" value="anonymous"/>
    </bean>

    <bean id="rememberMeAuthenticationProvider"
          class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg index="0" value="23_*!cdU='612./e;NrI"/>
    </bean>

    <bean id="userDetailsService"
          class="org.egov.infra.config.security.authentication.userdetail.service.UserDetailService">
        <constructor-arg ref="userService"/>
    </bean>
	<bean id="microServiceUtil" class="org.egov.infra.microservice.utils.MicroserviceUtils"></bean>
    <bean id="applicationAuthorizationMetadataSource"
          class="org.egov.infra.config.security.authorization.ApplicationAuthorizationMetadataSource">
        <property name="excludePatterns">
            <list>
                <value>/login</value>
                <value>/public</value>
            </list>
        </property>
    </bean>
</beans>
