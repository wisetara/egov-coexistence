<?xml version="1.0" encoding="utf-8"?>
<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency, transparency,
  ~    accountability and the service delivery of the government organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
	<!--
		Mapping file autogenerated by MyEclipse Persistence Tools
	-->
<hibernate-mapping>

	<query name="getInstrumentTypeByType">
    <![CDATA[select i from InstrumentType  i where i.type=?]]></query>

	<query name="getChartofAccountByInstrumentType">
    <![CDATA[select c from CChartOfAccounts c,InstrumentAccountCodes iac,InstrumentType it where iac.accountCode.id=c.id and iac.instrumentType.id=it.id and it.type=?]]></query>

	<!-- query name="getLocationByUser"-->
    <!-- [CDATA[select l from Location l,UserCounterMap ucm,User uim where uim.id=ucm.userId.id and ucm.counterId.id=l.id and uim.username=?]]></query-->

	<query name="getReceiptHeaderById">
	<![CDATA[select rh from org.egov.collection.entity.ReceiptHeader rh where rh.id=?]]></query>

	<query name="getDepartmentByCode">
	<![CDATA[select d from Department d where d.code=?]]></query>

	<query name="getFunctionaryByCode">
	<![CDATA[select f from Functionary f where f.code=?]]></query>

	<query name="getAllActiveCounters">
	<![CDATA[from org.egov.infra.admin.master.entity.Location loc where loc.active = true order by loc.name]]></query>

	<query name="getAllCounters">
	<![CDATA[from org.egov.infra.admin.master.entity.Location loc order by loc.name]]></query>

	<query name="getSchemeByCode">
	<![CDATA[select s from Scheme s where s.code=?]]></query>

	<query name="getSubSchemeByCode">
	<![CDATA[select ss from SubScheme ss where ss.code=?]]></query>

	<query name="getDepartmentById">
	<![CDATA[select d from Department d where d.id=?]]></query>

	<query name="getAccountDetailtypeById">
	<![CDATA[select a from Accountdetailtype a where a.id=?]]></query>

	<query name="getAccountDetailkeyByDetailKey">
	<![CDATA[select a from Accountdetailkey a where a.detailkey=? and a.accountdetailtype.id=?]]></query>

	<query name="getAllDepartment">
	<![CDATA[select d from  Department d order by name]]></query>

	<query name="getAllFunction">
	<![CDATA[select f from  CFunction f where f.isActive=true and f.isNotLeaf=0  order by f.name]]></query>

	<query name="getAllFunctionary">
	<![CDATA[select f from Functionary f where f.isactive=true order by f.name]]></query>

	<query name="getAllFund">
	<![CDATA[select f from Fund f where f.isactive=true and f.isnotleaf=false order by f.name]]></query>

	<query name="getAllFundsource">
	<![CDATA[select f  from Fundsource f where f.isactive=true and f.isnotleaf=false order by name]]></query>

	<query name="getAllField">
	<![CDATA[select b  from Boundary b where lower(b.boundaryType.name)='zone']]></query>

	<query name="SERVICE_BY_ID">
    <![CDATA[select s from ServiceDetails s where s.id = ?]]></query>

	<query name="getAllSchemeByFundId">
    <![CDATA[from Scheme where fund.id=? and isActive=true order by name]]></query>

    <query name="getAllSubSchemeBySchemeId">
    <![CDATA[from SubScheme where scheme.id=? and isActive=true order by name]]></query>

    <query name="getServicesforChallan">
    <![CDATA[from ServiceDetails s where s.serviceType=? order by name]]></query>

    <query name="getActiveFinancialYear">
    <![CDATA[from CFinancialYear f where f.isActive=true order by finYearRange]]></query>

    <!-- query name="getAllDesignationByDepartment"-->
    <!-- [CDATA[select distinct(dm) from DesignationMaster dm,Assignment a,AssignmentPrd ap
    where a.desigId.designationId=dm.designationId and ap.id=a.assignmentPrd.id and
    (to_date(ap.toDate,'dd-MM-YY') >= trunc(current_date) or ap.toDate is null) and a.deptId.id=?]]--><!-- /query-->

    <query name="getVoucherHeaderByVoucherNumber">
    <![CDATA[from CVoucherHeader cv where cv.voucherNumber=?]]></query>

     <query name="getFinancialYearByDate">
    <![CDATA[from CFinancialYear cfinancialyear where ? between date(cfinancialyear.startingDate) and date(cfinancialyear.endingDate)]]></query>

    <query name="getAllStatusesForModule">
	<![CDATA[from EgwStatus s where moduletype=? order by orderId]]></query>

	<query name="getStatusesForModuleAndCodes">
		<![CDATA[from EgwStatus s where s.moduletype= ? and s.code in (:param_1)]]>
	</query>

    <query name="getLocationById">
    <![CDATA[select l from Location l where l.id=?]]></query>

    <query name="getRecoveryByGlCode">
    	<![CDATA[select t from Recovery t where t.chartofaccounts.glcode=?]]>
    </query>

    <query name="getContraVoucherbyVoucherHeaderId">
    <![CDATA[from ContraJournalVoucher cjv where cjv.voucherHeaderId.id=? and cjv.instrumentHeaderId.id=?]]></query>

    <query name="getActiveServiceByType">
	<![CDATA[select s from ServiceDetails s where s.isEnabled = true and s.serviceType = ? order by s.orderNumber]]>
	</query>

    <query name="getActiveServiceByCodes">
	<![CDATA[select s from ServiceDetails s where s.isEnabled = true and s.serviceType = ? and s.code in(:param_1) order by s.orderNumber]]>
	</query>

	<query name="getAllLocations">
    <![CDATA[from Location loc order by loc.name]]></query>

    <query name="getServiceCategoryForType">
	<![CDATA[
	select distinct c from org.egov.infstr.models.ServiceDetails s join s.serviceCategory c where s.serviceType=? and s.isEnabled=?
	]]>
	</query>

    <query name="getServiceDetailsByCategory">
	<![CDATA[
	select s from org.egov.infstr.models.ServiceDetails s where s.serviceCategory.id=? and s.isEnabled=?
	]]>
	</query>

     <query name="getAllRemittanceVoucherCreator">
    <![CDATA[select distinct(iod.payinslipId.createdBy) from InstrumentOtherDetails iod]]></query>

        <query name="getAllRemittanceBankAccount">
    <![CDATA[select distinct(ba.bankAccountId) from BankAccountServiceMap ba]]></query>

    <query name="getCOAByInstrumentTypeAndService">
    <![CDATA[select c from CChartOfAccounts c,ServiceInstrumentAccounts sia,InstrumentType it where sia.chartOfAccounts.id=c.id and sia.instrumentType.id=it.id and it.type=? and sia.serviceDetails.id=?]]></query>

     <query name="getCOAByInstrumentTypeAndServiceAndBillservice">
    <![CDATA[select c from CChartOfAccounts c,ServiceInstrumentAccounts sia,InstrumentType it where sia.chartOfAccounts.id=c.id and sia.instrumentType.id=it.id and it.type=? and sia.serviceDetails.id=? and sia.billServiceDetails.id=?]]></query>
</hibernate-mapping>
